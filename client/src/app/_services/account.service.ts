import { Injectable } from '@angular/core';
import {
  ForwarderRequestDTO,
  ILoginService,
  LoginService,
  UserLoginDTO,
  UserResponseDTO,
} from './autogenerated/autogenerated.service';
import { Router } from '@angular/router';
import { BehaviorSubject, map, Observable } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class AccountService {
  private userSubject: BehaviorSubject<UserResponseDTO> =
    new BehaviorSubject<UserResponseDTO>({} as UserResponseDTO);
  user$: Observable<UserResponseDTO> = this.userSubject.asObservable();

  constructor(
    private router: Router,
    private userService: LoginService
  ) {}

  async userLogin(user: UserLoginDTO | null | undefined): Promise<void> {
    this.userService.userLogin(user).subscribe((res: UserResponseDTO) => {
      const user: UserResponseDTO = res;
      this.userSubject.next(user);
    });
  }

  addForwarder(
    forwarder: ForwarderRequestDTO | null | undefined
  ): Observable<UserResponseDTO | null> {
    return this.userService.addForwarder(forwarder).pipe((res) => {
      return res;
    });
  }

  logout(): void {
    this.userSubject.next({} as UserResponseDTO);
    this.router.navigateByUrl('/home');
  }
}
