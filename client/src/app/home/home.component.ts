import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { AccountService } from '../_services/account.service';
import { validateAllGroupFields } from '../shared/validators/validate';
import { UserLoginDTO, UserResponseDTO } from '../_services/autogenerated/autogenerated.service';
import { Observable, Subscription } from 'rxjs';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css'],
})
export class HomeComponent implements OnInit {
  loginForm: FormGroup;
  user = {} as UserLoginDTO;
  user$: Observable<UserResponseDTO>;
  userData: UserResponseDTO | null = null;
  isTokenValid = false;

  constructor(
    private fb: FormBuilder,
    private accountService: AccountService
  ) {
    this.user$ = this.accountService.user$;
  }

  ngOnInit(): void {
    this.formWrapper();
    this.user$.subscribe(res => {
      this.userData = res;
    });
  }

  async onSubmit(): Promise<void> {
    if (!this.loginForm.valid) {
      validateAllGroupFields(this.loginForm);
      return;
    }
    
    if (this.loginForm.valid) {
      this.user.login = this.loginForm.value.login;
      this.user.password = this.loginForm.value.password;
      this.user.prefix = "";
      await this.accountService.userLogin(this.user);
    }
  }

  formWrapper() {
    this.loginForm = this.fb.group({
      login: [null, [Validators.required]],
      password: [null, [Validators.required]],
    });
  }
}
